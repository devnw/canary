version: 2

project_name: canary

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: canary
    main: ./main.go
    binary: canary
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
      - freebsd
      - openbsd
      - netbsd
    goarch:
      - amd64
      - arm64
      - arm
      - "386"
    goarm:
      - "7"            # only relevant when GOARCH=arm
    ignore:
      # Unsupported or pointless targets
      - goos: darwin   # 32-bit/ARM darwin is not supported
        goarch: arm
      - goos: darwin
        goarch: "386"
      - goos: windows  # 32-bit ARM Windows is effectively dead; keep arm64
        goarch: arm
      - goos: freebsd
        goarch: arm    # drop 32-bit arm on BSDs to avoid toolchain breakage
      - goos: openbsd
        goarch: arm
      - goos: netbsd
        goarch: arm
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    mod_timestamp: "{{ .CommitTimestamp }}"

archives:
  # One archive definition per build id so both binaries are packaged
  - id: canary-archives
    builds:
      - canary
    name_template: >-
      canary_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - docs/CANARY_POLICY.md

  - id: canary-cli-archives
    builds:
      - canary-cli
    name_template: >-
      canary-cli_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - docs/CANARY_POLICY.md

checksum:
  name_template: "checksums.txt"

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  groups:
    - title: "Features"
      regexp: '^.*feat(\(.*\))?:.*$'
      order: 0
    - title: "Bug Fixes"
      regexp: '^.*fix(\(.*\))?:.*$'
      order: 1
    - title: "Documentation"
      regexp: '^.*docs(\(.*\))?:.*$'
      order: 2
    - title: "Performance"
      regexp: '^.*perf(\(.*\))?:.*$'
      order: 3
    - title: "Refactor"
      regexp: '^.*refactor(\(.*\))?:.*$'
      order: 4
    - title: "Tests"
      regexp: '^.*test(\(.*\))?:.*$'
      order: 5
    - title: "CI/CD"
      regexp: '^.*ci(\(.*\))?:.*$'
      order: 6
    - title: Other
      order: 999
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
      - "^style:"
      - "Merge pull request"
      - "Merge branch"

dockers:
  - id: canary
    image_templates:
      - "ghcr.io/devnw/canary:{{ .Tag }}"
      - "ghcr.io/devnw/canary:v{{ .Major }}"
      - "ghcr.io/devnw/canary:v{{ .Major }}.{{ .Minor }}"
      - "ghcr.io/devnw/canary:latest"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64,linux/arm64"

release:
  github:
    owner: devnw
    name: canary
  prerelease: auto
  draft: false
  name_template: "{{ .ProjectName }}-v{{ .Version }}"
  disable: false

brews:
  - repository:
      owner: devnw
      name: homebrew-tap
      branch: main
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    directory: Formula 
    homepage: "https://github.com/devnw/canary"
    description: "CANARY token scanner for requirement verification"
    license: "MIT"
    test: |
      system "#{bin}/canary", "--version"
    dependencies:
      - name: go
        type: optional
    install: |-
      bin.install "canary"

nfpms:
  - id: packages
    builds:
      - canary        # package the main binary; skip CLI here unless you want both
    package_name: canary
    file_name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    homepage: https://github.com/devnw/canary
    description: |-
      CANARY token scanner for requirement verification.
      Scans repositories for CANARY tokens and verifies requirement claims.
    maintainer: devnw <info@devnw.com>
    license: MIT
    vendor: devnw
    formats:
      - deb
      - rpm
      - apk
    bindir: /usr/bin
    section: utils
    priority: optional
    meta: false
    contents:
      - src: ./README.md
        dst: /usr/share/doc/canary/README.md
      - src: ./LICENSE
        dst: /usr/share/doc/canary/LICENSE
